#include<iostream>
using namespace std;
#include<vector>

void test01()
{
	vector<vector<int>> vec;

	vector<int> v1;
	vector<int> v2;
	vector<int> v3;
	vector<int> v4;

	//里面的小容器先赋值，再插入大容器。否则啥也没有
	for (int i = 0; i < 4; i++)
	{
		v1.push_back(i);
		v2.push_back(i + 1);
		v3.push_back(i + 2);
		v4.push_back(i + 3);
	}

	vec.push_back(v1);
	vec.push_back(v2);
	vec.push_back(v3);
	vec.push_back(v4);

	//先说明是什么类型的容器迭代器，再使迭代器指向某个特定容器的位置
	for (vector<vector<int>>::iterator it = vec.begin(); it != vec.end(); it++)
	{
		//(*it)----vector<int>
		for (vector<int>::iterator vit = (*it).begin(); vit != (*it).end(); vit++)
		{
			//(*vit)----int
			cout << *vit << " "; 
		}
		cout << endl;
	}
}

int main()
{
	test01();

	system("pause");
	return 0;
}
