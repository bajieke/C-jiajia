#include<iostream>
using namespace std;
#include"myArray.hpp"

void printArray(myArray<int> arr)
{
	for (int i = 0; i < arr.get_Size(); i++)
	{
		cout << arr[i] << "  ";
	}
	cout << endl;
}

void test01()
{
	myArray<int> arr1(5);    //5是容量，不是大小

	cout << "arr1.get_Capacity() = " << arr1.get_Capacity() << endl;  
	cout << "arr1.get_Size() = " <<arr1.get_Size() << endl;   

	for (int i = 0; i < 5; i++)
	{
		arr1.push_Back(i);
	}
	printArray(arr1);

	arr1.pop_Back();
	cout << "arr1.get_Size() = " << arr1.get_Size() << endl;  
	
	printArray(arr1);
	cout << "arr1.get_Size() = " << arr1.get_Size() << endl;  


	//cout<<arr1[3];   //出错，arr1是对象，无法通过下标访问

	//arr1[3] = 19;

	//arr2 = arr1;
}

class Person
{
public:
	Person() { }
	Person(string name, int age)
	{
		this->m_Name = name;
		this->m_Age = age;
	}
public:
	string m_Name;
	int m_Age;
};

void printPersonArray(myArray<Person> arr)
{
	for (int i = 0; i < arr.get_Size(); i++)
	{
		cout << "姓名：" << arr[i].m_Name << "\t年龄：" << arr[i].m_Age << endl;
	}
	cout << endl;
}

void test02()
{
	myArray<Person> arr(10);

	Person p1("孙悟空", 999);
	Person p2("猪八戒", 888);
	Person p3("沙和尚", 878);
	Person p4("唐僧", 21);

	arr.push_Back(p1);
	arr.push_Back(p2);
	arr.push_Back(p3);
	arr.push_Back(p4);

	printPersonArray(arr);

	cout << "arr.get_Capacity()=" << arr.get_Capacity() << endl;
	cout << "arr.get_Size()=" << arr.get_Size() << endl;
}


int main()
{
	//test01();
	test02();

	system("pause");
	return 0;
}
