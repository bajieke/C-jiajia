#include<iostream>
using namespace std;

//抽象类
class CPU
{
public:
	virtual void calculator() = 0;
};

class VideCard
{
public:
	virtual void display() = 0;
};

class Memory
{
public:
	virtual void storage() = 0;
};


//电脑类
class Computer
{
public:
	Computer(CPU* cpu, VideCard* vc, Memory* m)
	{
		m_cpu = cpu;
		m_vc = vc;
		m_m = m;
		//cout << "Computer 构造了" << endl;
	}
	~Computer()
	{
		if (m_cpu != NULL)
		{
			delete m_cpu;
			m_cpu = NULL;
			//cout << "cpu 析构了" << endl;
		}
		if (m_vc != NULL)
		{
			delete m_vc;
			m_vc = NULL;
			//cout << "videCard 析构了" << endl;
		}
		if (m_m != NULL)
		{
			delete m_m;
			m_m = NULL;
			//cout << "memory 析构了" << endl;
		}
	}
public:
	//组装
	void make()
	{
		m_cpu->calculator();
		m_vc->display();
		m_m->storage();
	}
private:
	CPU* m_cpu;
	VideCard* m_vc;
	Memory* m_m;
};


//Inter 产商零件
class IntelCpu :public CPU
{
public:
	//IntelCpu()
	//{
	//	cout << "Intel cpu 构造了" << endl;
	//}
public:
	void calculator()
	{
		cout << "Intel CPU" << endl;
	}
};

class IntelVideCard :public VideCard
{
public:
	//IntelVideCard()
	//{
	//	cout << "Intel VideCard 构造了" << endl;
	//}
	void display()
	{
		cout << "Intel VideCard" << endl;
	}
};

class IntelMemory :public Memory
{
public:
	//IntelMemory()
	//{
	//	cout << "Intel Memory 构造了" << endl;
	//}
	void storage()
	{
		cout << "Intel Memory" << endl;
	}
};


//Lenovo 产商零件
class LenovoCpu :public CPU
{
public:
	void calculator()
	{
		cout << "Lenovo CPU" << endl;
	}
};

class LenovoVideCard :public VideCard
{
public:
	void display()
	{
		cout << "Lenovo VideCard" << endl;
	}
};

class LenovoMemory :public Memory
{
public:
	void storage()
	{
		cout << "Lenovo Memory" << endl;
	}
};

void test01()
{
	Computer *computer1 = new Computer(new IntelCpu, new IntelVideCard, new IntelMemory);
	computer1->make();
	delete computer1;   //delete computer1时，会调用析构函数

	cout << "------------------------" << endl;
	Computer* computer2 = new Computer(new LenovoCpu, new LenovoVideCard, new LenovoMemory);
	computer2->make();
	delete computer2;

	cout << "------------------------" << endl;
	Computer* computer3 = new Computer(new LenovoCpu, new IntelVideCard, new LenovoMemory);
	computer3->make();
	delete computer3;
}

int main()
{
	test01();

	system("pause");
	return 0;
}
