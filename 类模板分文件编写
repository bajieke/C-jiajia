//main.cpp

#include<iostream>
using namespace std;
#include<string>


//类模板的分文件编写问题
// 
//第一种解决方法，直接包含源文件
//#include"person.cpp"

//第二种解决方法，将.h和.cpp文件写在一起，后缀名该为.hpp文件
#include"person.hpp"


//template<class T1,class T2>
//class Person
//{
//public:
//	Person(T1 name, T2 age);
//	void showPerson();
//public:
//	T1 m_Name;
//	T2 m_Age;
//};

//template<class T1,class T2>
//Person<T1,T2>::Person(T1 name, T2 age)
//{
//	this->m_Name = name;
//	this->m_Age = age;
//}
//
//template<class T1,class T2>
//void Person<T1, T2>::showPerson()
//{
//	cout << "name: " << this->m_Name << endl;
//	cout << "age:" << this->m_Age << endl;
//}

void test01()
{
	Person<string, int> p1("Jerry", 23);
	p1.showPerson();
}

int main()
{
	test01();

	system("pause");
	return 0;
}




//person.hpp


#pragma once 
#include<iostream>
using namespace std;

template<class T1, class T2>
class Person
{
public:
	Person(T1 name, T2 age);
	void showPerson();
public:
	T1 m_Name;
	T2 m_Age;
};




template<class T1, class T2>
Person<T1, T2>::Person(T1 name, T2 age)
{
	this->m_Name = name;
	this->m_Age = age;
}

template<class T1, class T2>
void Person<T1, T2>::showPerson()
{
	cout << "name: " << this->m_Name << endl;
	cout << "age:" << this->m_Age << endl;
}
