#include<iostream>
using namespace std;

class MyInteger
{
public:
	MyInteger()
	{
		m_Num = 0;
	}
	friend ostream& operator<<(ostream& out, MyInteger myint);
public:
	//重载前置++运算符
	MyInteger& operator++()   //返回的是引用，返回本身，而不是新拷贝的对象
	{	//先++
		++m_Num;
		//再返回自身，调用，<<重载运算符，输出
		return *this;
	}

	//重载前置++运算符
	//后置递增返回值，前置递增返回引用
	MyInteger& operator++(int)  //int 占位参数，区别前置后置++函数
	{
		//m_Num++;
		MyInteger temp = *this;
		m_Num++;
		return temp;
	}

private:
	int m_Num;
};

ostream& operator<<(ostream& out, MyInteger myint)
{
	out << myint.m_Num;
	return out;
}

void test01()
{
	MyInteger myint;
	cout << ++(++myint) << endl;
	cout << myint << endl;
}

void test02()
{
	MyInteger myint;
	cout << myint++ << endl;
	cout << myint << endl;
}

int main()
{
	//test01();
	test02();

	system("pause");
	return 0;
}
