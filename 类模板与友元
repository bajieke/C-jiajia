#include<iostream>
using namespace std;

//全局函数类外实现，先让编译器知道有这样的函数存在，
//看到参数Person,还要让编译器知道Person是一个类模板
template<class T1,class T2>
class Person;

template<class T1, class T2>
void printPerson2(Person<T1, T2> p)
{
	cout << "全局函数类外实现--name:" << p.m_Name << "    age:" << p.m_Age << endl;
}


//类模板
template<class T1,class T2>
class Person
{
public:
	Person(T1 name, T2 age)
	{
		this->m_Name = name;
		this->m_Age = age;
	}
	//全局函数类内实现
	friend void printPerson(Person < T1, T2> p)
	{
		cout << "name:" << p.m_Name << "   age:" << p.m_Age << endl;
	}
	//全局函数类外实现，printPerson2<>,加<>让编译器知道是一个模板
	friend void printPerson2<>(Person<T1, T2> p);

private:
	T1 m_Name;
	T2 m_Age;
};

//全局函数，类外实现，出错
//template<class T1,class T2>
//void printPerson2(Person<T1, T2> p)
//{
//	cout << "全局函数类外实现--name:" << p.m_Name << "    age:" << p.m_Age << endl;
//}


void test01()
{
	Person<string, int> p1("范小花", 23);

	printPerson(p1);
}

void test02()
{
	Person<string, int> p2("Jeffy", 19);

	printPerson2(p2);
}

int main()
{
	//test01();
	test02();

	system("pause");
	return 0;
}
